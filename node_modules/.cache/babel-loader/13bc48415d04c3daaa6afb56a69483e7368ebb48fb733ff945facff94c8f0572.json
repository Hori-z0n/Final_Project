{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\konla\\\\OneDrive\\\\Desktop\\\\climatechange\\\\src\\\\components\\\\MyMap.jsx\";\nimport React, { Component } from \"react\";\nimport { MapContainer, GeoJSON, TileLayer, useMap, Marker, Popup } from \"react-leaflet\";\n// import {MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport mapData from \"./../data/countries.json\";\n// import mapData from \"./../data/districts.json\";\nimport \"leaflet/dist/leaflet.css\";\nimport 'leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.webpack.css'; // Re-uses images from ~leaflet package\nimport * as L from 'leaflet';\nimport 'leaflet-defaulticon-compatibility';\nimport \"./MyMap.css\";\n// import { click } from \"@testing-library/user-event/dist/click\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MyMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      color: \"#ffff00\"\n    };\n    this.color = [\"green\", \"blue\", \"yellow\", \"orange\", \"gray\", \"red\", \"purple\", \"violet\"];\n    this.countryStyle = {\n      fillColor: 'red',\n      fillOpacity: 1,\n      //0-1\n      color: 'black',\n      weight: 0.1\n      //dashArray: 5,\n    };\n    this.onCountryClick = event => {\n      console.log(\"Clicked\");\n    };\n    this.onCountryMouseover = event => {\n      event.target.setStyle({\n        color: \"green\",\n        fillColor: \"yellow\"\n        // fillOpacity: 0.5,\n      });\n    };\n    // Function\n    this.printMessageToConsole = event => {\n      console.log(\"Clicked\");\n    };\n    this.changeCountryColor = event => {\n      event.target.setStyle({\n        color: \"black\",\n        fillColor: this.state.color,\n        fillOpacity: 0.1\n      });\n    };\n    this.onEachCountry = (country, layer) => {\n      const countryName = country.properties.ADMIN;\n      console.log(countryName);\n      layer.bindPopup(countryName);\n\n      // layer.options.fillOpacity = Math.random();//random opacity\n      layer.options.fillOpacity = 0.1;\n      // const colorIndex = Math.floor(Math.random() * this.color.length)\n      // layer.options.fillColor = this.color[colorIndex];\n      layer.on({\n        click: this.changeCountryColor\n        // click: this.printMessageToConsole,\n        // mouseover: this.changeCountryColor,\n      });\n    };\n    this.colorChange = event => {\n      this.setState({\n        color: event.target.value\n      });\n    };\n  }\n  componentDidMount() {\n    console.log(mapData);\n  }\n  render() {\n    const position = [51.505, -0.09];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"MyMap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        style: {\n          height: \"400px\"\n        },\n        zoom: 9,\n        center: [15, 100],\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: position,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"A pretty CSS3 popup. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 42\n            }, this), \" Easily customizable.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n          style: this.countryStyle,\n          data: mapData.features,\n          onEachFeature: this.onEachCountry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: this.state.color,\n        onChange: this.colorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default MyMap;","map":{"version":3,"names":["React","Component","MapContainer","GeoJSON","TileLayer","useMap","Marker","Popup","mapData","L","jsxDEV","_jsxDEV","MyMap","constructor","args","state","color","countryStyle","fillColor","fillOpacity","weight","onCountryClick","event","console","log","onCountryMouseover","target","setStyle","printMessageToConsole","changeCountryColor","onEachCountry","country","layer","countryName","properties","ADMIN","bindPopup","options","on","click","colorChange","setState","value","componentDidMount","render","position","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","height","zoom","center","attribution","url","data","features","onEachFeature","type","onChange"],"sources":["C:/Users/konla/OneDrive/Desktop/climatechange/src/components/MyMap.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport { MapContainer, GeoJSON, TileLayer, useMap, Marker, Popup} from \"react-leaflet\";\r\n// import {MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport mapData from \"./../data/countries.json\";\r\n// import mapData from \"./../data/districts.json\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport 'leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.webpack.css'; // Re-uses images from ~leaflet package\r\nimport * as L from 'leaflet';\r\nimport 'leaflet-defaulticon-compatibility';\r\nimport \"./MyMap.css\"\r\n// import { click } from \"@testing-library/user-event/dist/click\";\r\nclass MyMap extends Component{\r\n    state = {color: \"#ffff00\"};\r\n\r\n    color = [\"green\", \"blue\", \"yellow\", \"orange\", \"gray\", \"red\", \"purple\", \"violet\"]\r\n\r\n    componentDidMount(){\r\n        console.log(mapData);\r\n    }\r\n    countryStyle = {\r\n        fillColor: 'red',\r\n        fillOpacity: 1,//0-1\r\n        color: 'black',\r\n        weight: 0.1,\r\n        //dashArray: 5,\r\n    };\r\n    onCountryClick = (event)=>{\r\n        console.log(\"Clicked\");\r\n    };\r\n    onCountryMouseover = (event)=>{\r\n        event.target.setStyle({\r\n            color: \"green\",\r\n            fillColor: \"yellow\",\r\n                // fillOpacity: 0.5,\r\n        });\r\n    };\r\n    // Function\r\n    printMessageToConsole = (event)=>{\r\n        console.log(\"Clicked\");\r\n    };\r\n    changeCountryColor = (event)=>{\r\n        event.target.setStyle({\r\n            color: \"black\",\r\n            fillColor: this.state.color,\r\n            fillOpacity: 0.1,\r\n        });\r\n    };\r\n    onEachCountry = (country, layer)=>{\r\n        const countryName = country.properties.ADMIN;\r\n        console.log(countryName);\r\n        layer.bindPopup(countryName);\r\n\r\n        // layer.options.fillOpacity = Math.random();//random opacity\r\n        layer.options.fillOpacity = 0.1\r\n        // const colorIndex = Math.floor(Math.random() * this.color.length)\r\n        // layer.options.fillColor = this.color[colorIndex];\r\n        layer.on({\r\n            click: this.changeCountryColor,\r\n            // click: this.printMessageToConsole,\r\n            // mouseover: this.changeCountryColor,\r\n        });\r\n    }\r\n    colorChange = (event)=>{\r\n        this.setState({color: event.target.value});\r\n    };\r\n    \r\n    render(){\r\n        const position = [51.505, -0.09]\r\n        return (\r\n        <div>\r\n            <h1 style={{textAlign: \"center\"}}>MyMap</h1>\r\n            <MapContainer style={{height:\"400px\"}} zoom={9} center={[15, 100]}>\r\n            <TileLayer\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            <Marker position={position}>\r\n                <Popup>\r\n                    A pretty CSS3 popup. <br /> Easily customizable.\r\n                </Popup>\r\n            </Marker>\r\n                <GeoJSON style={this.countryStyle} data={mapData.features} onEachFeature={this.onEachCountry}/>\r\n            </MapContainer>\r\n            <input type=\"color\" value={this.state.color} onChange={this.colorChange}/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default MyMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}