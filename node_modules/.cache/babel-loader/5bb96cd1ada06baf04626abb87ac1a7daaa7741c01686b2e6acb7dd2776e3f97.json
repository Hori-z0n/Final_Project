{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\konla\\\\OneDrive\\\\Desktop\\\\climatechange\\\\src\\\\components\\\\MyMap.jsx\";\nimport React, { Component } from \"react\";\nimport { MapContainer, GeoJSON } from \"react-leaflet\";\n// import {MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport mapData from \"./../data/countries.json\";\n// import mapData from \"./../data/thai.json\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./MyMap.css\";\nimport { click } from \"@testing-library/user-event/dist/click\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MyMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    // componentDidMount(){\n    //     console.log(mapData);\n    // }\n    this.countryStyle = {\n      fillColor: 'red',\n      fillOpacity: 1,\n      //0-1\n      color: 'black',\n      weight: 2\n      //dashArray: 5,\n    };\n    this.onCountryClick = event => {\n      console.log(\"Clicked\");\n    };\n    this.onEachCountry = (country, layer) => {\n      const countryName = country.properties.ADMIN;\n      console.log(countryName);\n      layer.bindPopup(countryName);\n      layer.on({\n        click: this.onCountryClick,\n        mouseover: event => {\n          console.log(event);\n          event.target.setStyle({\n            color: \"green\",\n            fillColor: \"yellow\"\n            // fillOpacity: 0.5,\n          });\n        }\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"MyMap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        style: {\n          height: \"88vh\"\n        },\n        zoom: 2,\n        center: [20, 100],\n        children: /*#__PURE__*/_jsxDEV(GeoJSON, {\n          style: this.countryStyle,\n          data: mapData.features,\n          onEachFeature: this.onEachCountry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default MyMap;","map":{"version":3,"names":["React","Component","MapContainer","GeoJSON","mapData","click","jsxDEV","_jsxDEV","MyMap","constructor","args","state","countryStyle","fillColor","fillOpacity","color","weight","onCountryClick","event","console","log","onEachCountry","country","layer","countryName","properties","ADMIN","bindPopup","on","mouseover","target","setStyle","render","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","height","zoom","center","data","features","onEachFeature"],"sources":["C:/Users/konla/OneDrive/Desktop/climatechange/src/components/MyMap.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport { MapContainer, GeoJSON} from \"react-leaflet\";\r\n// import {MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport mapData from \"./../data/countries.json\";\r\n// import mapData from \"./../data/thai.json\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"./MyMap.css\"\r\nimport { click } from \"@testing-library/user-event/dist/click\";\r\nclass MyMap extends Component{\r\n    state = {};\r\n\r\n    // componentDidMount(){\r\n    //     console.log(mapData);\r\n    // }\r\n    countryStyle = {\r\n        fillColor: 'red',\r\n        fillOpacity: 1,//0-1\r\n        color: 'black',\r\n        weight: 2,\r\n        //dashArray: 5,\r\n    };\r\n    onCountryClick = (event)=>{\r\n        console.log(\"Clicked\");\r\n    }\r\n    onEachCountry = (country, layer)=>{\r\n        const countryName = country.properties.ADMIN;\r\n        console.log(countryName);\r\n        layer.bindPopup(countryName);\r\n\r\n        layer.on({\r\n            click: this.onCountryClick,\r\n            mouseover: (event)=>{\r\n                console.log(event);\r\n                event.target.setStyle(\r\n                    {\r\n                        color: \"green\",\r\n                        fillColor: \"yellow\",\r\n                        // fillOpacity: 0.5,\r\n                    }\r\n                )\r\n            }\r\n        });\r\n    }\r\n    render(){\r\n        return (\r\n        <div>\r\n            \r\n            <h1 style={{textAlign: \"center\"}}>MyMap</h1>\r\n            <MapContainer style={{height:\"88vh\"}} zoom={2} center={[20, 100]}>\r\n                <GeoJSON style={this.countryStyle} data={mapData.features} onEachFeature={this.onEachCountry}/>\r\n            </MapContainer>\r\n            \r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default MyMap;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAASC,YAAY,EAAEC,OAAO,QAAO,eAAe;AACpD;AACA,OAAOC,OAAO,MAAM,0BAA0B;AAC9C;AACA,OAAO,0BAA0B;AACjC,OAAO,aAAa;AACpB,SAASC,KAAK,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/D,MAAMC,KAAK,SAASP,SAAS;EAAAQ,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACzBC,KAAK,GAAG,CAAC,CAAC;IAEV;IACA;IACA;IAAA,KACAC,YAAY,GAAG;MACXC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE,CAAC;MAAC;MACfC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE;MACR;IACJ,CAAC;IAAA,KACDC,cAAc,GAAIC,KAAK,IAAG;MACtBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IAC1B,CAAC;IAAA,KACDC,aAAa,GAAG,CAACC,OAAO,EAAEC,KAAK,KAAG;MAC9B,MAAMC,WAAW,GAAGF,OAAO,CAACG,UAAU,CAACC,KAAK;MAC5CP,OAAO,CAACC,GAAG,CAACI,WAAW,CAAC;MACxBD,KAAK,CAACI,SAAS,CAACH,WAAW,CAAC;MAE5BD,KAAK,CAACK,EAAE,CAAC;QACLvB,KAAK,EAAE,IAAI,CAACY,cAAc;QAC1BY,SAAS,EAAGX,KAAK,IAAG;UAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;UAClBA,KAAK,CAACY,MAAM,CAACC,QAAQ,CACjB;YACIhB,KAAK,EAAE,OAAO;YACdF,SAAS,EAAE;YACX;UACJ,CACJ,CAAC;QACL;MACJ,CAAC,CAAC;IACN,CAAC;EAAA;EACDmB,MAAMA,CAAA,EAAE;IACJ,oBACAzB,OAAA;MAAA0B,QAAA,gBAEI1B,OAAA;QAAI2B,KAAK,EAAE;UAACC,SAAS,EAAE;QAAQ,CAAE;QAAAF,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5ChC,OAAA,CAACL,YAAY;QAACgC,KAAK,EAAE;UAACM,MAAM,EAAC;QAAM,CAAE;QAACC,IAAI,EAAE,CAAE;QAACC,MAAM,EAAE,CAAC,EAAE,EAAE,GAAG,CAAE;QAAAT,QAAA,eAC7D1B,OAAA,CAACJ,OAAO;UAAC+B,KAAK,EAAE,IAAI,CAACtB,YAAa;UAAC+B,IAAI,EAAEvC,OAAO,CAACwC,QAAS;UAACC,aAAa,EAAE,IAAI,CAACxB;QAAc;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEd,CAAC;EAEV;AACJ;AACA,eAAe/B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}