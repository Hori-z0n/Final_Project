{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\konla\\\\OneDrive\\\\Desktop\\\\climatechange\\\\src\\\\components\\\\MyMap.jsx\";\nimport React, { Component } from \"react\";\nimport { MapContainer, GeoJSON } from \"react-leaflet\";\n// import {MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport mapData from \"./../data/countries.json\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./MyMap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MyMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.countryStyle = {\n      fillColor: 'red',\n      fillOpacity: 1,\n      //0-1\n      color: 'black',\n      weight: 2\n      //dashArray: 5,\n    };\n    this.onEachCountry = (country, layer) => {\n      const countryName = country.properties.ADMIN;\n      console.log(countryName);\n      layer.bindPopup(countryName + \" Population: \");\n    };\n  }\n  componentDidMount() {\n    console.log(mapData);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"MyMap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        style: {\n          height: \"88vh\"\n        },\n        zoom: 2,\n        center: [20, 100],\n        children: /*#__PURE__*/_jsxDEV(GeoJSON, {\n          style: this.countryStyle,\n          data: mapData.features,\n          onEachFeature: this.onEachCountry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default MyMap;","map":{"version":3,"names":["React","Component","MapContainer","GeoJSON","mapData","jsxDEV","_jsxDEV","MyMap","constructor","args","state","countryStyle","fillColor","fillOpacity","color","weight","onEachCountry","country","layer","countryName","properties","ADMIN","console","log","bindPopup","componentDidMount","render","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","height","zoom","center","data","features","onEachFeature"],"sources":["C:/Users/konla/OneDrive/Desktop/climatechange/src/components/MyMap.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport { MapContainer, GeoJSON} from \"react-leaflet\";\r\n// import {MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport mapData from \"./../data/countries.json\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"./MyMap.css\"\r\nclass MyMap extends Component{\r\n    state = {};\r\n\r\n    componentDidMount(){\r\n        console.log(mapData);\r\n    }\r\n    countryStyle = {\r\n        fillColor: 'red',\r\n        fillOpacity: 1,//0-1\r\n        color: 'black',\r\n        weight: 2,\r\n        //dashArray: 5,\r\n    };\r\n    onEachCountry = (country, layer)=>{\r\n        const countryName = country.properties.ADMIN;\r\n        console.log(countryName);\r\n        layer.bindPopup(countryName + \" Population: \");\r\n    }\r\n    render(){\r\n        return (\r\n        <div>\r\n            \r\n            <h1 style={{textAlign: \"center\"}}>MyMap</h1>\r\n            <MapContainer style={{height:\"88vh\"}} zoom={2} center={[20, 100]}>\r\n                <GeoJSON style={this.countryStyle} data={mapData.features} onEachFeature={this.onEachCountry}/>\r\n            </MapContainer>\r\n            \r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default MyMap;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAASC,YAAY,EAAEC,OAAO,QAAO,eAAe;AACpD;AACA,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAO,0BAA0B;AACjC,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACpB,MAAMC,KAAK,SAASN,SAAS;EAAAO,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACzBC,KAAK,GAAG,CAAC,CAAC;IAAA,KAKVC,YAAY,GAAG;MACXC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE,CAAC;MAAC;MACfC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE;MACR;IACJ,CAAC;IAAA,KACDC,aAAa,GAAG,CAACC,OAAO,EAAEC,KAAK,KAAG;MAC9B,MAAMC,WAAW,GAAGF,OAAO,CAACG,UAAU,CAACC,KAAK;MAC5CC,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;MACxBD,KAAK,CAACM,SAAS,CAACL,WAAW,GAAG,eAAe,CAAC;IAClD,CAAC;EAAA;EAdDM,iBAAiBA,CAAA,EAAE;IACfH,OAAO,CAACC,GAAG,CAACnB,OAAO,CAAC;EACxB;EAaAsB,MAAMA,CAAA,EAAE;IACJ,oBACApB,OAAA;MAAAqB,QAAA,gBAEIrB,OAAA;QAAIsB,KAAK,EAAE;UAACC,SAAS,EAAE;QAAQ,CAAE;QAAAF,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5C3B,OAAA,CAACJ,YAAY;QAAC0B,KAAK,EAAE;UAACM,MAAM,EAAC;QAAM,CAAE;QAACC,IAAI,EAAE,CAAE;QAACC,MAAM,EAAE,CAAC,EAAE,EAAE,GAAG,CAAE;QAAAT,QAAA,eAC7DrB,OAAA,CAACH,OAAO;UAACyB,KAAK,EAAE,IAAI,CAACjB,YAAa;UAAC0B,IAAI,EAAEjC,OAAO,CAACkC,QAAS;UAACC,aAAa,EAAE,IAAI,CAACvB;QAAc;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEd,CAAC;EAEV;AACJ;AACA,eAAe1B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}