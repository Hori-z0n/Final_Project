{"ast":null,"code":"import * as L from 'leaflet';\nL.Icon.Default.mergeOptions({\n  // Erase default options, so that they can be overridden by _initializeOptions if not supplied.\n  iconUrl: null,\n  iconRetinaUrl: null,\n  shadowUrl: null,\n  iconSize: null,\n  iconAnchor: null,\n  popupAnchor: null,\n  tooltipAnchor: null,\n  shadowSize: null,\n  // @option classNamePrefix: String = 'leaflet-default-icon-'\n  // Prefix for the classes defined in CSS that contain the Icon options.\n  // See the leaflet-defaulticon-compatibility.css file as a starter.\n  // Expected suffixes are \"icon\", \"shadow\", \"popup\" and \"tooltip\".\n  classNamePrefix: 'leaflet-default-icon-'\n});\nL.Icon.Default.include({\n  _needsInit: true,\n  // Override to make sure options are retrieved from CSS.\n  _getIconUrl: function (name) {\n    // @option imagePath: String\n    // `Icon.Default` will try to auto-detect the location of\n    // the blue icon images. If you are placing these images in a\n    // non-standard way, set this option to point to the right\n    // path, before any marker is added to a map.\n    // Caution: do not use this option with inline base64 image(s).\n    var imagePath = this.options.imagePath || L.Icon.Default.imagePath || '';\n    // Deprecated (IconDefault.imagePath), backwards-compatibility only\n\n    if (this._needsInit) {\n      // Modifying imagePath option after _getIconUrl has been called\n      // once in this instance of IconDefault will no longer have any\n      // effect.\n      this._initializeOptions(imagePath);\n    }\n    return imagePath + L.Icon.prototype._getIconUrl.call(this, name);\n  },\n  // Initialize all necessary options for this instance.\n  _initializeOptions: function (imagePath) {\n    this._setOptions('icon', _detectIconOptions, imagePath);\n    this._setOptions('shadow', _detectIconOptions, imagePath);\n    this._setOptions('popup', _detectDivOverlayOptions);\n    this._setOptions('tooltip', _detectDivOverlayOptions);\n    this._needsInit = false;\n  },\n  // Retrieve values from CSS and assign to this instance options.\n  _setOptions: function (name, detectorFn, imagePath) {\n    var options = this.options,\n      prefix = options.classNamePrefix,\n      optionValues = detectorFn(prefix + name, imagePath);\n    for (var optionName in optionValues) {\n      options[name + optionName] = options[name + optionName] || optionValues[optionName];\n    }\n  }\n});\n\n// Retrieve icon option values from CSS (icon or shadow).\nfunction _detectIconOptions(className, imagePath) {\n  var el = L.DomUtil.create('div', className, document.body),\n    urlsContainer = _getBkgImageOrCursor(el),\n    urls = _extractUrls(urlsContainer, imagePath),\n    iconX = _getStyleInt(el, 'width'),\n    iconY = _getStyleInt(el, 'height'),\n    anchorNX = _getStyleInt(el, 'margin-left'),\n    anchorNY = _getStyleInt(el, 'margin-top');\n  el.parentNode.removeChild(el);\n  return {\n    Url: urls[0],\n    RetinaUrl: urls[1],\n    Size: [iconX, iconY],\n    Anchor: [-anchorNX, -anchorNY]\n  };\n}\n\n// Retrieve anchor option values from CSS (popup or tooltip).\nfunction _detectDivOverlayOptions(className) {\n  var el = L.DomUtil.create('div', className, document.body),\n    anchorX = _getStyleInt(el, 'margin-left'),\n    anchorY = _getStyleInt(el, 'margin-top');\n  el.parentNode.removeChild(el);\n  return {\n    Anchor: [anchorX, anchorY]\n  };\n}\n\n// Read the CSS url (could be path or inline base64), may be multiple.\n// First: normal icon\n// Second: Retina icon\nfunction _extractUrls(urlsContainer, imagePath) {\n  var re = /url\\(['\"]?([^\"']*?)['\"]?\\)/gi,\n    // Match anything between url( and ), possibly with single or double quotes.\n    urls = [],\n    m = re.exec(urlsContainer);\n  while (m) {\n    // Keep the entire URL from CSS rule, so that each image can have its own full URL.\n    // Except in the case imagePath is provided: remove the path part (i.e. keep only the file name).\n    urls.push(imagePath ? _stripPath(m[1]) : m[1]);\n    m = re.exec(urlsContainer);\n  }\n  return urls;\n}\n\n// Remove anything before the last slash (/) occurrence (inclusive).\n// Caution: will give unexpected result if url is inline base64 data\n// => do not specify imagePath in that case!\nfunction _stripPath(url) {\n  return url.substr(url.lastIndexOf('/') + 1);\n}\nfunction _getStyleInt(el, style) {\n  return parseInt(_getStyle(el, style), 10);\n}\n\n// Factorize style reading fallback for IE8.\nfunction _getStyle(el, style) {\n  return L.DomUtil.getStyle(el, style) || L.DomUtil.getStyle(el, _kebabToCamelCase(style));\n}\n\n// When Firefox high contrast (colours override) option is enabled,\n// \"background-image\" is overridden by the browser as \"none\".\n// In that case, fallback to \"cursor\". But keep \"background-image\"\n// as primary source because IE expects cursor URL as relative to HTML page\n// instead of relative to CSS file.\nfunction _getBkgImageOrCursor(el) {\n  var bkgImage = _getStyle(el, 'background-image');\n  return bkgImage && bkgImage !== 'none' ? bkgImage : _getStyle(el, 'cursor');\n}\n\n// Convert kebab-case CSS property name to camelCase for IE currentStyle.\nfunction _kebabToCamelCase(prop) {\n  return prop.replace(/-(\\w)/g, function (str, w) {\n    return w.toUpperCase();\n  });\n}","map":{"version":3,"names":["L","Icon","Default","mergeOptions","iconUrl","iconRetinaUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","tooltipAnchor","shadowSize","classNamePrefix","include","_needsInit","_getIconUrl","name","imagePath","options","_initializeOptions","prototype","call","_setOptions","_detectIconOptions","_detectDivOverlayOptions","detectorFn","prefix","optionValues","optionName","className","el","DomUtil","create","document","body","urlsContainer","_getBkgImageOrCursor","urls","_extractUrls","iconX","_getStyleInt","iconY","anchorNX","anchorNY","parentNode","removeChild","Url","RetinaUrl","Size","Anchor","anchorX","anchorY","re","m","exec","push","_stripPath","url","substr","lastIndexOf","style","parseInt","_getStyle","getStyle","_kebabToCamelCase","bkgImage","prop","replace","str","w","toUpperCase"],"sources":["C:/Users/supakron/OneDrive - Chitralada Technology Institute/Desktop/pro com/project final/Final_Project/node_modules/leaflet-defaulticon-compatibility/src/Icon.Default.compatibility.js"],"sourcesContent":["import * as L from 'leaflet';\r\n\r\n\r\nL.Icon.Default.mergeOptions({\r\n\t// Erase default options, so that they can be overridden by _initializeOptions if not supplied.\r\n\ticonUrl: null,\r\n\ticonRetinaUrl: null,\r\n\tshadowUrl: null,\r\n\ticonSize: null,\r\n\ticonAnchor: null,\r\n\tpopupAnchor: null,\r\n\ttooltipAnchor: null,\r\n\tshadowSize: null,\r\n\r\n\t// @option classNamePrefix: String = 'leaflet-default-icon-'\r\n\t// Prefix for the classes defined in CSS that contain the Icon options.\r\n\t// See the leaflet-defaulticon-compatibility.css file as a starter.\r\n\t// Expected suffixes are \"icon\", \"shadow\", \"popup\" and \"tooltip\".\r\n\tclassNamePrefix: 'leaflet-default-icon-',\r\n});\r\n\r\n\r\nL.Icon.Default.include({\r\n\r\n\t_needsInit: true,\r\n\r\n\t// Override to make sure options are retrieved from CSS.\r\n\t_getIconUrl: function (name) {\r\n\t\t// @option imagePath: String\r\n\t\t// `Icon.Default` will try to auto-detect the location of\r\n\t\t// the blue icon images. If you are placing these images in a\r\n\t\t// non-standard way, set this option to point to the right\r\n\t\t// path, before any marker is added to a map.\r\n\t\t// Caution: do not use this option with inline base64 image(s).\r\n\t\tvar imagePath = this.options.imagePath || L.Icon.Default.imagePath || '';\r\n\t\t// Deprecated (IconDefault.imagePath), backwards-compatibility only\r\n\r\n\t\tif (this._needsInit) {\r\n\t\t\t// Modifying imagePath option after _getIconUrl has been called\r\n\t\t\t// once in this instance of IconDefault will no longer have any\r\n\t\t\t// effect.\r\n\t\t\tthis._initializeOptions(imagePath);\r\n\t\t}\r\n\r\n\t\treturn imagePath + L.Icon.prototype._getIconUrl.call(this, name);\r\n\t},\r\n\r\n\t// Initialize all necessary options for this instance.\r\n\t_initializeOptions: function (imagePath) {\r\n\t\tthis._setOptions('icon', _detectIconOptions, imagePath);\r\n\t\tthis._setOptions('shadow', _detectIconOptions, imagePath);\r\n\t\tthis._setOptions('popup', _detectDivOverlayOptions);\r\n\t\tthis._setOptions('tooltip', _detectDivOverlayOptions);\r\n\t\tthis._needsInit = false;\r\n\t},\r\n\r\n\t// Retrieve values from CSS and assign to this instance options.\r\n\t_setOptions: function (name, detectorFn, imagePath) {\r\n\t\tvar options = this.options,\r\n\t\t    prefix = options.classNamePrefix,\r\n\t\t    optionValues = detectorFn(prefix + name, imagePath);\r\n\r\n\t\tfor (var optionName in optionValues) {\r\n\t\t\toptions[name + optionName] = options[name + optionName] || optionValues[optionName];\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n\r\n// Retrieve icon option values from CSS (icon or shadow).\r\nfunction _detectIconOptions(className, imagePath) {\r\n\tvar el = L.DomUtil.create('div',  className, document.body),\r\n\t    urlsContainer = _getBkgImageOrCursor(el),\r\n\t    urls = _extractUrls(urlsContainer, imagePath),\r\n\t    iconX = _getStyleInt(el, 'width'),\r\n\t    iconY = _getStyleInt(el, 'height'),\r\n\t    anchorNX = _getStyleInt(el, 'margin-left'),\r\n\t    anchorNY = _getStyleInt(el, 'margin-top');\r\n\r\n\tel.parentNode.removeChild(el);\r\n\r\n\treturn {\r\n\t\tUrl: urls[0],\r\n\t\tRetinaUrl: urls[1],\r\n\t\tSize: [iconX, iconY],\r\n\t\tAnchor: [-anchorNX, -anchorNY]\r\n\t};\r\n}\r\n\r\n// Retrieve anchor option values from CSS (popup or tooltip).\r\nfunction _detectDivOverlayOptions(className) {\r\n\tvar el = L.DomUtil.create('div', className, document.body),\r\n\t    anchorX = _getStyleInt(el, 'margin-left'),\r\n\t    anchorY = _getStyleInt(el, 'margin-top');\r\n\r\n\tel.parentNode.removeChild(el);\r\n\r\n\treturn {\r\n\t\tAnchor: [anchorX, anchorY]\r\n\t};\r\n}\r\n\r\n// Read the CSS url (could be path or inline base64), may be multiple.\r\n// First: normal icon\r\n// Second: Retina icon\r\nfunction _extractUrls(urlsContainer, imagePath) {\r\n\tvar re = /url\\(['\"]?([^\"']*?)['\"]?\\)/gi, // Match anything between url( and ), possibly with single or double quotes.\r\n\t    urls = [],\r\n\t    m = re.exec(urlsContainer);\r\n\r\n\twhile (m) {\r\n\t\t// Keep the entire URL from CSS rule, so that each image can have its own full URL.\r\n\t\t// Except in the case imagePath is provided: remove the path part (i.e. keep only the file name).\r\n\t\turls.push(imagePath ? _stripPath(m[1]) : m[1]);\r\n\t\tm = re.exec(urlsContainer);\r\n\t}\r\n\r\n\treturn urls;\r\n}\r\n\r\n// Remove anything before the last slash (/) occurrence (inclusive).\r\n// Caution: will give unexpected result if url is inline base64 data\r\n// => do not specify imagePath in that case!\r\nfunction _stripPath(url) {\r\n\treturn url.substr(url.lastIndexOf('/') + 1);\r\n}\r\n\r\nfunction _getStyleInt(el, style) {\r\n\treturn parseInt(_getStyle(el, style), 10);\r\n}\r\n\r\n// Factorize style reading fallback for IE8.\r\nfunction _getStyle(el, style) {\r\n\treturn L.DomUtil.getStyle(el, style) || L.DomUtil.getStyle(el, _kebabToCamelCase(style));\r\n}\r\n\r\n// When Firefox high contrast (colours override) option is enabled,\r\n// \"background-image\" is overridden by the browser as \"none\".\r\n// In that case, fallback to \"cursor\". But keep \"background-image\"\r\n// as primary source because IE expects cursor URL as relative to HTML page\r\n// instead of relative to CSS file.\r\nfunction _getBkgImageOrCursor(el) {\r\n\tvar bkgImage = _getStyle(el, 'background-image');\r\n\r\n\treturn bkgImage && bkgImage !== 'none' ? bkgImage : _getStyle(el, 'cursor');\r\n}\r\n\r\n// Convert kebab-case CSS property name to camelCase for IE currentStyle.\r\nfunction _kebabToCamelCase(prop) {\r\n\treturn prop.replace(/-(\\w)/g, function (str, w) {\r\n\t\treturn w.toUpperCase();\r\n\t});\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}